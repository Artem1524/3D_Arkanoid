//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/Controls/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Arkanoid
{
    public partial class @PlayerControls: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Map"",
            ""id"": ""960d863b-9928-4184-a16c-656b4edcf87f"",
            ""actions"": [
                {
                    ""name"": ""Player1Move"",
                    ""type"": ""Value"",
                    ""id"": ""ef8176a3-6f67-49fd-89a9-88cd39cea020"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player2Move"",
                    ""type"": ""Value"",
                    ""id"": ""df6ab566-75e7-4a97-88c7-7dea312c39c4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2,InvertVector2(invertX=false)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PushBall"",
                    ""type"": ""Button"",
                    ""id"": ""18d08504-13a1-4a27-b4a8-179d2457f770"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""7a4a4768-7cb8-428f-a8a2-5cf3519b9a43"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""f1f7dca8-f95b-4d49-9bbc-7d94cdfbc1cb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2bfd6071-e509-42c2-9a2f-5491b880de84"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""07884d5e-ccb0-448e-91fe-bafc8898c39e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9022982c-99e2-4d83-958d-b11f9351dc6b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""346e2120-da00-4fa2-902f-bbd233ea0934"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""708a677f-e8fd-4b09-8435-04cc0c6e75a8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1a3c5ed7-e420-4a6c-8863-11a7d71dc994"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cb1c412e-4c31-440b-a4d6-21a3e909c253"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""05ba521b-864e-476e-906b-415e3f082363"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""77c6abf9-6d0f-4fbd-8d6c-8e266b67afdd"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""da84067b-cd4c-43ef-8c8b-2aa5cd96ae3a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PushBall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9c00727-2826-4624-ad34-97f5607194f1"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Map
            m_Map = asset.FindActionMap("Map", throwIfNotFound: true);
            m_Map_Player1Move = m_Map.FindAction("Player1Move", throwIfNotFound: true);
            m_Map_Player2Move = m_Map.FindAction("Player2Move", throwIfNotFound: true);
            m_Map_PushBall = m_Map.FindAction("PushBall", throwIfNotFound: true);
            m_Map_Pause = m_Map.FindAction("Pause", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Map
        private readonly InputActionMap m_Map;
        private List<IMapActions> m_MapActionsCallbackInterfaces = new List<IMapActions>();
        private readonly InputAction m_Map_Player1Move;
        private readonly InputAction m_Map_Player2Move;
        private readonly InputAction m_Map_PushBall;
        private readonly InputAction m_Map_Pause;
        public struct MapActions
        {
            private @PlayerControls m_Wrapper;
            public MapActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Player1Move => m_Wrapper.m_Map_Player1Move;
            public InputAction @Player2Move => m_Wrapper.m_Map_Player2Move;
            public InputAction @PushBall => m_Wrapper.m_Map_PushBall;
            public InputAction @Pause => m_Wrapper.m_Map_Pause;
            public InputActionMap Get() { return m_Wrapper.m_Map; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MapActions set) { return set.Get(); }
            public void AddCallbacks(IMapActions instance)
            {
                if (instance == null || m_Wrapper.m_MapActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_MapActionsCallbackInterfaces.Add(instance);
                @Player1Move.started += instance.OnPlayer1Move;
                @Player1Move.performed += instance.OnPlayer1Move;
                @Player1Move.canceled += instance.OnPlayer1Move;
                @Player2Move.started += instance.OnPlayer2Move;
                @Player2Move.performed += instance.OnPlayer2Move;
                @Player2Move.canceled += instance.OnPlayer2Move;
                @PushBall.started += instance.OnPushBall;
                @PushBall.performed += instance.OnPushBall;
                @PushBall.canceled += instance.OnPushBall;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }

            private void UnregisterCallbacks(IMapActions instance)
            {
                @Player1Move.started -= instance.OnPlayer1Move;
                @Player1Move.performed -= instance.OnPlayer1Move;
                @Player1Move.canceled -= instance.OnPlayer1Move;
                @Player2Move.started -= instance.OnPlayer2Move;
                @Player2Move.performed -= instance.OnPlayer2Move;
                @Player2Move.canceled -= instance.OnPlayer2Move;
                @PushBall.started -= instance.OnPushBall;
                @PushBall.performed -= instance.OnPushBall;
                @PushBall.canceled -= instance.OnPushBall;
                @Pause.started -= instance.OnPause;
                @Pause.performed -= instance.OnPause;
                @Pause.canceled -= instance.OnPause;
            }

            public void RemoveCallbacks(IMapActions instance)
            {
                if (m_Wrapper.m_MapActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IMapActions instance)
            {
                foreach (var item in m_Wrapper.m_MapActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_MapActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public MapActions @Map => new MapActions(this);
        public interface IMapActions
        {
            void OnPlayer1Move(InputAction.CallbackContext context);
            void OnPlayer2Move(InputAction.CallbackContext context);
            void OnPushBall(InputAction.CallbackContext context);
            void OnPause(InputAction.CallbackContext context);
        }
    }
}
